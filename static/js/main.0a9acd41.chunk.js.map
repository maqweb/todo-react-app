{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","placeholder","this","onChange","React","Component","TodolistItem","label","onDeleted","onToggleImortant","onToggleDone","classNames","isDone","important","onClick","type","Todolist","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","activeClass","ItemAddForm","onLabelChange","onSubmit","preventDefault","addTask","App","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","todoData","getItem","parse","maxId","text","newTask","createTodoItem","deletItem","el","onToggleProperty","arr","propName","indx","findIndex","oldItem","newItem","slice","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a9acd41.chunk.js","sourcesContent":["import React from \"react\";\nimport './app-header.css'\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo list</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    )\n};\n\nexport default AppHeader;","import React from \"react\";\nimport './search-panel.css'\n\nclass SearchPanel extends React.Component {\n\n    state = {\n        term: ''\n    };\n\n    onSearchChange = (e) => {\n        const term = e.target.value;\n        this.setState({term});\n        this.props.onSearchChange(term)\n    };\n\n    render() {\n        return (\n            <input className=\"form-control search-input\"\n                   placeholder='search'\n                   value={this.state.term}\n                   onChange={this.onSearchChange}\n            />\n        )\n    }\n}\n\nexport default SearchPanel;","import React from \"react\";\nimport './todo-list-item.css'\n\nconst TodolistItem = ({label, onDeleted, onToggleImortant, onToggleDone, isDone, important}) => {\n\n    let classNames = 'todo-list-item';\n    if (isDone) {\n        classNames += ' done'\n    }\n    if (important) {\n        classNames += ' important'\n    }\n\n    return (\n        <span className={classNames}>\n                <span className=\"todo-list-item-label\"\n                      onClick={onToggleDone}>\n                    {label}\n                </span>\n\n                <button onClick={onToggleImortant} type=\"button\"\n                        className=\"btn btn-outline-success btn-sm float-right\">\n                    <i className=\"fa fa-exclamation\"/>\n                </button>\n\n                <button onClick={onDeleted} type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\">\n                    <i className=\"fa fa-trash-o\"/>\n                </button>\n            </span>\n    )\n};\n\n\nexport default TodolistItem;","import React from 'react';\nimport './todo-list.css'\n\nimport TodolistItem from \"../todo-list-item/todo-list-item\";\n\n\nconst Todolist = ({todos, onDeleted, onToggleImortant, onToggleDone}) => {\n\n    const elements = todos.map(item => {\n        const { id, ...itemProps } = item;\n        return (\n            <li className=\"list-group-item\" key={id}>\n                <TodolistItem {...itemProps}\n                              onDeleted={() => onDeleted(id)}\n                              onToggleImortant={() => onToggleImortant(id)}\n                              onToggleDone={() => onToggleDone(id)}\n                />\n            </li>\n        )\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default Todolist;","import React from 'react';\n\nimport './item-status-filter.css';\n\nclass ItemStatusFilter extends React.Component {\n\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'},\n    ];\n\n    render() {\n        const {filter, onFilterChange} = this.props;\n\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter === name;\n            const activeClass = isActive ? 'btn-info' : 'btn-outline-secondary';\n            return (\n                <button type=\"button\"\n                        key={name}\n                        onClick={() => onFilterChange(name)}\n                        className={`btn ${activeClass}`}>{label}\n                </button>\n            )\n        });\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    }\n}\n\nexport default ItemStatusFilter","import React from \"react\";\nimport './item-add-form.css'\n\nclass ItemAddForm extends React.Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTask(this.state.label);\n        this.setState({\n            label: ''\n        })\n    };\n\n    render() {\n        return (\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\n                <input type=\"text\"\n                       value={this.state.label}\n                       className=\"form-control\"\n                       onChange={this.onLabelChange}\n                       placeholder=\"What needs to be done\"\n                />\n                <button className=\"btn btn-outline-secondary\">\n                    Add&nbsp;Task\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default ItemAddForm;","import React from \"react\";\nimport './App.css'\n\nimport AppHeader from \"./components/app-header/app-header\";\nimport SearchPanel from \"./components/search-panel/search-panel\";\nimport Todolist from \"./components/todo-list/todo-list\";\nimport ItemStatusFilter from \"./components/item-status-filter/item-status-filter\";\nimport ItemAddForm from \"./components/item-add-form/item-add-form\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.restoreState()\n    }\n\n    saveState = () => {\n      const stateAsString = JSON.stringify(this.state);\n      localStorage.setItem('your-state', stateAsString)\n    };\n\n    restoreState = () => {\n        let state = {\n            todoData: [],\n            filter: 'all',\n            term: ''\n        };\n        const stateAsString = localStorage.getItem('your-state');\n        if (stateAsString !== null) {\n            state = JSON.parse(stateAsString)\n        }\n        this.setState(state)\n    };\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n           /* this.createTodoItem('Learn JavaScript'),\n            this.createTodoItem('Learn React'),\n            this.createTodoItem('Build React App'),*/\n        ],\n        filter: 'all',\n        term: ''\n    };\n\n    createTodoItem(label) {\n        return {\n            id: this.maxId++,\n            label,\n            important: false,\n            isDone: false\n        }\n    }\n\n    addTask = (text) => {\n        let newTask = this.createTodoItem(text);\n        this.setState({\n            todoData: [...this.state.todoData, newTask]\n        }, () => this.saveState())\n    };\n\n    deletItem = (id) => {\n        this.setState(({todoData}) => {\n            const newData = todoData.filter(el => el.id !== id);\n            return {\n                todoData: newData\n            }\n        }, () => this.saveState())\n    };\n\n    onToggleProperty = (arr, id, propName) => {\n        const indx = arr.findIndex(el => el.id === id);\n        const oldItem = arr[indx];\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\n        return [...arr.slice(0, indx), newItem, ...arr.slice(indx + 1)];\n    };\n\n    onToggleImortant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.onToggleProperty(todoData, id, 'important')\n            }\n        }, () => this.saveState())\n    };\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n           return {\n               todoData: this.onToggleProperty(todoData, id, 'isDone')\n           }\n        }, () => this.saveState())\n    };\n\n    onSearchChange = (term) => {\n        this.setState({term})\n    };\n\n    search(items, term) {\n        if (term.length === 0) return items;\n        return items.filter(item => {\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\n        })\n    };\n\n    onFilterChange = (filter) => {\n        this.setState({filter})\n    };\n\n    filter(items, filter) {\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter(item => !item.isDone);\n            case 'done':\n                return items.filter(item => item.isDone);\n            default:\n                return items;\n        }\n    }\n\n    render() {\n        const {todoData, term, filter} = this.state;\n\n        const visibleItems = this.filter(this.search(todoData, term), filter);\n        const doneCount = todoData.filter(el => el.isDone).length;\n        const todoCount = todoData.length - doneCount;\n\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\n                    <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange}/>\n                </div>\n\n                <Todolist todos={visibleItems}\n                          onDeleted={this.deletItem}\n                          onToggleImortant={this.onToggleImortant}\n                          onToggleDone={this.onToggleDone}\n                />\n\n                <ItemAddForm addTask={this.addTask}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}